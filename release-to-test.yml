name: release-to-test

on:
  # Trigger when a release is created or when pushing to the main or develop branches
  push:
    branches:
      - main
      - develop
  release:
    types: [created]

env:
  solution_name: Prioritz
  solution_source_folder: solutions
  solution_outbound_folder: out/solutions
  solution_release_folder: out/release

jobs:
  convert-to-managed:
    runs-on: windows-latest
    steps:
    # Checkout code from the current branch (main or develop)
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        lfs: true

    # Pack the managed solution from the source folder
    - name: Pack Managed Solution
      uses: microsoft/powerplatform-actions/pack-solution@0.4.0
      with:
        solution-folder: ${{ env.solution_source_folder}}/${{ env.solution_name }}
        solution-file: ${{ env.solution_outbound_folder}}/${{ env.solution_name }}_managed.zip
        solution-type: Managed

    # Pack the unmanaged solution from the source folder
    - name: Pack Unmanaged Solution
      uses: microsoft/powerplatform-actions/pack-solution@0.4.0
      with:
        solution-folder: ${{ env.solution_source_folder}}/${{ env.solution_name }}
        solution-file: ${{ env.solution_outbound_folder}}/${{ env.solution_name }}_unmanaged.zip
        solution-type: Unmanaged

    # Upload the managed solution to GitHub artifact store for later use
    - name: Upload Managed Solution as Artifact
      uses: actions/upload-artifact@v4  # Updated to latest version
      with:
        name: managedSolutions
        path: ${{ env.solution_outbound_folder}}/${{ env.solution_name }}_managed.zip

  release-to-staging:
    needs: [convert-to-managed]
    runs-on: windows-latest

    steps:
    # Checkout the code from the current branch (main or develop)
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        lfs: true

    # Download the ready-to-release managed solution from GitHub artifact store
    - name: Download Managed Solution Artifact
      uses: actions/download-artifact@v4  # Updated to latest version
      with:
        name: managedSolutions
        path: ${{ env.solution_release_folder }}

    # Import the managed solution into the target test environment
    - name: Import Solution to Test Environment
      uses: microsoft/powerplatform-actions/import-solution@0.4.0
      with:
       environment-url: ${{secrets.PowerPlatformTestUrl}}
       user-name: ${{secrets.PowerPlatformAppID}}
       password-secret: ${{ secrets.PowerPlatformClientSecret }}
       solution-file: ${{ env.solution_release_folder}}/${{ env.solution_name }}_managed.zip
       run-asynchronously: true
